<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>/post/</link><description>Recent content in Posts on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 10 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Inside minikube ISO</title><link>/post/insideminikubeiso/</link><pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate><guid>/post/insideminikubeiso/</guid><description>Minikube uses a generated .iso file that is used to bootstrap the VM with it&amp;rsquo;s own kernel and rootfs. Once the VM has been initialized properly it will use the .iso to bootstrap the Linux kernel allowing all the different applications to be installed and run. This means that pretty much minikube is running on it&amp;rsquo;s own operating system and does not use any dependencies from the host system (except through the VM)</description></item><item><title>Minikube Startup Process</title><link>/post/howminikubeworks/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>/post/howminikubeworks/</guid><description>Overview Minikube is called cluster-in-a-box and the reason why it is called that is because it contains everything that you will need to run cluster on a local environment. The tool is good to get a head strat into the Kubernetes world.
Kubernetes as a project is a collection of tools that works together to deliver container clustering solution. The difference with minikube is that as a developer we don&amp;rsquo;t have to worry installing the different projects together as it&amp;rsquo;s neatly packaged into a simple file that can be run directly.</description></item><item><title>Building and hacking minikube</title><link>/post/minikube/</link><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid>/post/minikube/</guid><description>This document will outline the internals on minikube. It will outline how minikube works and what are the steps involved in running it inside an IDE. Having the ability to run inside the IDE will give the power of more better understanding by stepping through the code.
Minikube makes heavy use of VM and out of the box it supports VMs such as VirtualBox, Hyperkit, etc. We going to go through the VirtualBox setup in Linux environment for this article.</description></item><item><title>Deploying to Minikube(Work in progress)</title><link>/post/deployingtominikube/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>/post/deployingtominikube/</guid><description> Deploying hello-world https://kubernetes.io/docs/setup/learning-environment/minikube/
kubectl run hello-minikube &amp;ndash;image=k8s.gcr.io/echoserver:1.10 &amp;ndash;port=8080
kubectl expose deployment hello-minikube &amp;ndash;type=NodePort
kubectl get pod
minikube service hello-minikube &amp;ndash;url</description></item><item><title>Minikube parameters (Work in progress)</title><link>/post/minikubeparameters/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>/post/minikubeparameters/</guid><description> Minikube parameters different program arguments available what each arguments do where each arguments source code lives in usage of other packages used for the different arguments</description></item><item><title>Walking through minikube source code (Work in progress)</title><link>/post/walkingthroughminikubesourcecode/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>/post/walkingthroughminikubesourcecode/</guid><description> Walking through minikube source code tree structure of the source code explanation of content of each directory step through checkout and building outside IDE</description></item></channel></rss>